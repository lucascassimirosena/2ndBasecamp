***CRIADO POR lucassim***

Como pode notar, na pasta tem os três arquivos solciitados no desafio. Aqui farei a explicação completa sobre o código.
O estudo sobre Matrizes irá ajudar a entender o desafio.

A função ft_putchar.c é a responsável por colocar os caracteres na nossa função rush04.c
A função main é a função principal que será utilizada para testar nossa função rush04.c, o avaliador irá fazer alterações nela para poder
testar a função.

************************************ ft_puchar.c  :

#include <unistd.h>

void ft_putchar(char c)
{
    write(1, &c, 1);             //Aqui é onde dizemos que irá ser escrito um caracteres na saída principal com tamanho de 1 byte.
}

se você está vendo isso é porque provavelmente sabe como a função write funciona, mas caso não, veja nossos exercícios da 00.

************************************* main.c  :

void rush(int x, int y);       //Aqui chamamos e passamos os parâmetros da função

int main(void)
{
    rush(5, 3);              //Este campo será alterado pelo avaliador para testar a função
    return (0);
}

************************************ rush04.c   :

void ft_putchar(char c);  //chama a função 

void print_line(int x, char begin, char middle, char end)  //aqui criamos a função que terá a largura(x), o caractere inicial(begin), o  do meio(middle) e o final(end)
{
    int col_count;  //Declaramos a variável de contagem de colunas

    col_count = 0;   // dizemos que a variável vale 0.
    if(x > 0) // se a largura tiver um valor maior que 0
    {
        ft_putchar (begin); //iniciamos a função que irá colocar o caractere na primeira posição.
        if (x > 2)  // e se a largura for maior que 2
        {
            while (col_count < x - 2) //e enquanto a coluna for menor que a largura - 2
            {
                ft_putchar(middle);  //execute a função que irá colocar os caracteres no meio
                col_count ++;       // e incremente a coluna em 1

                /***VOCÊ ENTENDEU?***/
                Se nós colocassemos "x = 2" ele iria verificar se x>0, é, então iria executar a função putchar e colocar o primeiro caractere.
                O segundo caractere depende se x - 2 for menor que col_count (contagem de colunas), como a col count vale 0 e x vale 2, então executaria
                o próximo código que é inserir mais um caractere(middle), pois 0 é menor que 2 - 2 em seguida col_count é incrementado em +1. Ou seja
                agora col_count tem valor de 1 e x valor de 2. Agora col_count vale 1 e não é menor que 0 (2 -2) portando não é inserido um novo caractere.
            }
        }
        if (x > 1)  //se x for maior que 1
            ft_putchar (end);  //execute a função e coloque um caractere no final
        ft_putchar('\n');
    }
}

void rush(int x, int y)                                            // aqui temos  a função que receberá largura e altura como parâmetros
{


    char first_char;                                           // cria a variavel que irá receber 'A'
    char second_char;                                         // cria a variavel que irá receber 'B'
    char third_char;                                         // cria a variavel que irá receber 'C'
    int midcount;                                           //cria a variavel midcount


    first_char = 'A';
    second_char = 'B';
    third_char = 'C';
    midcount = 0;                                      //inicializa com midcount = 0

    if (y > 0)                                       // se y for maior que 0
        print_line(x, 'A', 'B', 'C');               // imprima dessa forma
    while (midcount < y - 2)                       // e enquanto midcount for menor que y - 2
    {
        print_line (x, 'B', ' ', 'B');           // imprima dessa forma
        midcount++;                             // e incrimente o midcount em 1
    }
    if (y >=2)                                // se o y for maior ou igual a 2
        print_line (x, 'A', 'B', 'C');       // imprima dessa forma   
}

/* esta última função foi para colocar a altura que são as linhas. */


lucassim.


